#!/bin/sh
### BEGIN INIT INFO
# Provides:
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Control Apache Solr v4.x as an init.d service
### END INIT INFO

dir={{solr_home}}/solr-{{solr_version}}/{{solr_config_home}}
user="{{mapr_admin_username}}"
#cmd="java -Dsolr.solr.home=$dir/solr -DzkHost=$zookeepers/solr -jar $dir/start.jar"
cmd="java -DzkHost={{zookeepers.stdout}}/solr -jar $dir/start.jar"

name=`basename $0`
pid_file="/var/tmp/$name.pid"
stdout_log="/var/tmp/$name.log"
stderr_log="/var/tmp/$name.err"

# Source function library.
. /etc/rc.d/init.d/functions

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
	if [ $USER == "root" ]; then
		runuser -c "$cmd" $user > "$stdout_log" 2> "$stderr_log" &
		runuser -c sh -c "echo $! > '$pid_file'"
	else
	        $cmd > "$stdout_log" 2> "$stderr_log" &
		echo $! > "$pid_file"; sleep 2
	fi
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        kill `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
        lsof -i :8983
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
